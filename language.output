Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmt
    3      | stmt stmts

    4 stmt: let
    5     | call
    6     | WHILE '(' exp ')' '{' stmts '}'
    7     | ifstmt

    8 let: IDENT '=' exp ';'

    9 call: IDENT '(' explist ')' ';'
   10     | FUNC '(' explist ')' ';'

   11 ifstmt: if
   12       | if elselist

   13 elselist: elsiflist
   14         | else
   15         | elsiflist else

   16 elsiflist: elsif
   17          | elsif elsiflist

   18 elsif: ELSIF '(' exp ')' '{' stmts '}'

   19 else: ELSE '{' stmts '}'

   20 if: IF '(' exp ')' '{' stmts '}'

   21 explist: exp ',' explist
   22        | exp

   23 exp: factor
   24    | factor '+' factor
   25    | factor '-' factor
   26    | factor '*' factor
   27    | factor '/' factor

   28 factor: '(' exp ')'
   29       | NUMBER
   30       | IDENT
   31       | STRING


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 9 10 18 20 28
')' (41) 6 9 10 18 20 28
'*' (42) 26
'+' (43) 24
',' (44) 21
'-' (45) 25
'/' (47) 27
';' (59) 8 9 10
'=' (61) 8
'{' (123) 6 18 19 20
'}' (125) 6 18 19 20
error (256)
NUMBER (258) 29
IDENT (259) 8 9 30
STRING (260) 31
FUNC (261) 10
WHILE (262) 6
IF (263) 20
ELSE (264) 19
ELSIF (265) 18


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
program (23)
    on left: 1, on right: 0
stmts (24)
    on left: 2 3, on right: 1 3 6 18 19 20
stmt (25)
    on left: 4 5 6 7, on right: 2 3
let (26)
    on left: 8, on right: 4
call (27)
    on left: 9 10, on right: 5
ifstmt (28)
    on left: 11 12, on right: 7
elselist (29)
    on left: 13 14 15, on right: 12
elsiflist (30)
    on left: 16 17, on right: 13 15 17
elsif (31)
    on left: 18, on right: 16 17
else (32)
    on left: 19, on right: 14 15
if (33)
    on left: 20, on right: 11 12
explist (34)
    on left: 21 22, on right: 9 10 21
exp (35)
    on left: 23 24 25 26 27, on right: 6 8 18 20 21 22 28
factor (36)
    on left: 28 29 30 31, on right: 23 24 25 26 27


state 0

    0 $accept: . program $end

    IDENT  shift, and go to state 1
    FUNC   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    program  go to state 5
    stmts    go to state 6
    stmt     go to state 7
    let      go to state 8
    call     go to state 9
    ifstmt   go to state 10
    if       go to state 11


state 1

    8 let: IDENT . '=' exp ';'
    9 call: IDENT . '(' explist ')' ';'

    '='  shift, and go to state 12
    '('  shift, and go to state 13


state 2

   10 call: FUNC . '(' explist ')' ';'

    '('  shift, and go to state 14


state 3

    6 stmt: WHILE . '(' exp ')' '{' stmts '}'

    '('  shift, and go to state 15


state 4

   20 if: IF . '(' exp ')' '{' stmts '}'

    '('  shift, and go to state 16


state 5

    0 $accept: program . $end

    $end  shift, and go to state 17


state 6

    1 program: stmts .

    $default  reduce using rule 1 (program)


state 7

    2 stmts: stmt .
    3      | stmt . stmts

    IDENT  shift, and go to state 1
    FUNC   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    $default  reduce using rule 2 (stmts)

    stmts   go to state 18
    stmt    go to state 7
    let     go to state 8
    call    go to state 9
    ifstmt  go to state 10
    if      go to state 11


state 8

    4 stmt: let .

    $default  reduce using rule 4 (stmt)


state 9

    5 stmt: call .

    $default  reduce using rule 5 (stmt)


state 10

    7 stmt: ifstmt .

    $default  reduce using rule 7 (stmt)


state 11

   11 ifstmt: if .
   12       | if . elselist

    ELSE   shift, and go to state 19
    ELSIF  shift, and go to state 20

    $default  reduce using rule 11 (ifstmt)

    elselist   go to state 21
    elsiflist  go to state 22
    elsif      go to state 23
    else       go to state 24


state 12

    8 let: IDENT '=' . exp ';'

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    exp     go to state 29
    factor  go to state 30


state 13

    9 call: IDENT '(' . explist ')' ';'

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    explist  go to state 31
    exp      go to state 32
    factor   go to state 30


state 14

   10 call: FUNC '(' . explist ')' ';'

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    explist  go to state 33
    exp      go to state 32
    factor   go to state 30


state 15

    6 stmt: WHILE '(' . exp ')' '{' stmts '}'

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    exp     go to state 34
    factor  go to state 30


state 16

   20 if: IF '(' . exp ')' '{' stmts '}'

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    exp     go to state 35
    factor  go to state 30


state 17

    0 $accept: program $end .

    $default  accept


state 18

    3 stmts: stmt stmts .

    $default  reduce using rule 3 (stmts)


state 19

   19 else: ELSE . '{' stmts '}'

    '{'  shift, and go to state 36


state 20

   18 elsif: ELSIF . '(' exp ')' '{' stmts '}'

    '('  shift, and go to state 37


state 21

   12 ifstmt: if elselist .

    $default  reduce using rule 12 (ifstmt)


state 22

   13 elselist: elsiflist .
   15         | elsiflist . else

    ELSE  shift, and go to state 19

    $default  reduce using rule 13 (elselist)

    else  go to state 38


state 23

   16 elsiflist: elsif .
   17          | elsif . elsiflist

    ELSIF  shift, and go to state 20

    $default  reduce using rule 16 (elsiflist)

    elsiflist  go to state 39
    elsif      go to state 23


state 24

   14 elselist: else .

    $default  reduce using rule 14 (elselist)


state 25

   29 factor: NUMBER .

    $default  reduce using rule 29 (factor)


state 26

   30 factor: IDENT .

    $default  reduce using rule 30 (factor)


state 27

   31 factor: STRING .

    $default  reduce using rule 31 (factor)


state 28

   28 factor: '(' . exp ')'

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    exp     go to state 40
    factor  go to state 30


state 29

    8 let: IDENT '=' exp . ';'

    ';'  shift, and go to state 41


state 30

   23 exp: factor .
   24    | factor . '+' factor
   25    | factor . '-' factor
   26    | factor . '*' factor
   27    | factor . '/' factor

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 23 (exp)


state 31

    9 call: IDENT '(' explist . ')' ';'

    ')'  shift, and go to state 46


state 32

   21 explist: exp . ',' explist
   22        | exp .

    ','  shift, and go to state 47

    $default  reduce using rule 22 (explist)


state 33

   10 call: FUNC '(' explist . ')' ';'

    ')'  shift, and go to state 48


state 34

    6 stmt: WHILE '(' exp . ')' '{' stmts '}'

    ')'  shift, and go to state 49


state 35

   20 if: IF '(' exp . ')' '{' stmts '}'

    ')'  shift, and go to state 50


state 36

   19 else: ELSE '{' . stmts '}'

    IDENT  shift, and go to state 1
    FUNC   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    stmts   go to state 51
    stmt    go to state 7
    let     go to state 8
    call    go to state 9
    ifstmt  go to state 10
    if      go to state 11


state 37

   18 elsif: ELSIF '(' . exp ')' '{' stmts '}'

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    exp     go to state 52
    factor  go to state 30


state 38

   15 elselist: elsiflist else .

    $default  reduce using rule 15 (elselist)


state 39

   17 elsiflist: elsif elsiflist .

    $default  reduce using rule 17 (elsiflist)


state 40

   28 factor: '(' exp . ')'

    ')'  shift, and go to state 53


state 41

    8 let: IDENT '=' exp ';' .

    $default  reduce using rule 8 (let)


state 42

   24 exp: factor '+' . factor

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    factor  go to state 54


state 43

   25 exp: factor '-' . factor

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    factor  go to state 55


state 44

   26 exp: factor '*' . factor

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    factor  go to state 56


state 45

   27 exp: factor '/' . factor

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    factor  go to state 57


state 46

    9 call: IDENT '(' explist ')' . ';'

    ';'  shift, and go to state 58


state 47

   21 explist: exp ',' . explist

    NUMBER  shift, and go to state 25
    IDENT   shift, and go to state 26
    STRING  shift, and go to state 27
    '('     shift, and go to state 28

    explist  go to state 59
    exp      go to state 32
    factor   go to state 30


state 48

   10 call: FUNC '(' explist ')' . ';'

    ';'  shift, and go to state 60


state 49

    6 stmt: WHILE '(' exp ')' . '{' stmts '}'

    '{'  shift, and go to state 61


state 50

   20 if: IF '(' exp ')' . '{' stmts '}'

    '{'  shift, and go to state 62


state 51

   19 else: ELSE '{' stmts . '}'

    '}'  shift, and go to state 63


state 52

   18 elsif: ELSIF '(' exp . ')' '{' stmts '}'

    ')'  shift, and go to state 64


state 53

   28 factor: '(' exp ')' .

    $default  reduce using rule 28 (factor)


state 54

   24 exp: factor '+' factor .

    $default  reduce using rule 24 (exp)


state 55

   25 exp: factor '-' factor .

    $default  reduce using rule 25 (exp)


state 56

   26 exp: factor '*' factor .

    $default  reduce using rule 26 (exp)


state 57

   27 exp: factor '/' factor .

    $default  reduce using rule 27 (exp)


state 58

    9 call: IDENT '(' explist ')' ';' .

    $default  reduce using rule 9 (call)


state 59

   21 explist: exp ',' explist .

    $default  reduce using rule 21 (explist)


state 60

   10 call: FUNC '(' explist ')' ';' .

    $default  reduce using rule 10 (call)


state 61

    6 stmt: WHILE '(' exp ')' '{' . stmts '}'

    IDENT  shift, and go to state 1
    FUNC   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    stmts   go to state 65
    stmt    go to state 7
    let     go to state 8
    call    go to state 9
    ifstmt  go to state 10
    if      go to state 11


state 62

   20 if: IF '(' exp ')' '{' . stmts '}'

    IDENT  shift, and go to state 1
    FUNC   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    stmts   go to state 66
    stmt    go to state 7
    let     go to state 8
    call    go to state 9
    ifstmt  go to state 10
    if      go to state 11


state 63

   19 else: ELSE '{' stmts '}' .

    $default  reduce using rule 19 (else)


state 64

   18 elsif: ELSIF '(' exp ')' . '{' stmts '}'

    '{'  shift, and go to state 67


state 65

    6 stmt: WHILE '(' exp ')' '{' stmts . '}'

    '}'  shift, and go to state 68


state 66

   20 if: IF '(' exp ')' '{' stmts . '}'

    '}'  shift, and go to state 69


state 67

   18 elsif: ELSIF '(' exp ')' '{' . stmts '}'

    IDENT  shift, and go to state 1
    FUNC   shift, and go to state 2
    WHILE  shift, and go to state 3
    IF     shift, and go to state 4

    stmts   go to state 70
    stmt    go to state 7
    let     go to state 8
    call    go to state 9
    ifstmt  go to state 10
    if      go to state 11


state 68

    6 stmt: WHILE '(' exp ')' '{' stmts '}' .

    $default  reduce using rule 6 (stmt)


state 69

   20 if: IF '(' exp ')' '{' stmts '}' .

    $default  reduce using rule 20 (if)


state 70

   18 elsif: ELSIF '(' exp ')' '{' stmts . '}'

    '}'  shift, and go to state 71


state 71

   18 elsif: ELSIF '(' exp ')' '{' stmts '}' .

    $default  reduce using rule 18 (elsif)
