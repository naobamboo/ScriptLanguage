Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmt
    3      | stmt stmts

    4 stmt: let
    5     | call
    6     | declare
    7     | WHILE '(' exp ')' '{' stmts '}'
    8     | ifstmt

    9 let: IDENT '=' exp ';'

   10 call: IDENT '(' explist ')' ';'
   11     | IDENT '(' ')' ';'
   12     | FUNC '(' explist ')' ';'

   13 declare: DECLARE IDENT '(' symlist ')' '{' stmts '}'
   14        | DECLARE IDENT '(' ')' '{' stmts '}'

   15 ifstmt: if
   16       | if elselist

   17 elselist: elsiflist
   18         | else
   19         | elsiflist else

   20 elsiflist: elsif
   21          | elsif elsiflist

   22 elsif: ELSIF '(' exp ')' '{' stmts '}'

   23 else: ELSE '{' stmts '}'

   24 if: IF '(' exp ')' '{' stmts '}'

   25 symlist: IDENT
   26        | IDENT ',' symlist

   27 explist: exp ',' explist
   28        | exp

   29 exp: factor CMP factor
   30    | factor '+' factor
   31    | factor '-' factor
   32    | factor '*' factor
   33    | factor '/' factor
   34    | factor '%' factor
   35    | factor

   36 factor: '(' exp ')'
   37       | NUMBER
   38       | IDENT
   39       | STRING


Terminals, with rules where they appear

$end (0) 0
'%' (37) 34
'(' (40) 7 10 11 12 13 14 22 24 36
')' (41) 7 10 11 12 13 14 22 24 36
'*' (42) 32
'+' (43) 30
',' (44) 26 27
'-' (45) 31
'/' (47) 33
';' (59) 9 10 11 12
'=' (61) 9
'{' (123) 7 13 14 22 23 24
'}' (125) 7 13 14 22 23 24
error (256)
NUMBER (258) 37
IDENT (259) 9 10 11 13 14 25 26 38
STRING (260) 39
CMP (261) 29
FUNC (262) 12
WHILE (263) 7
IF (264) 24
ELSE (265) 23
ELSIF (266) 22
DECLARE (267) 13 14


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
program (26)
    on left: 1, on right: 0
stmts (27)
    on left: 2 3, on right: 1 3 7 13 14 22 23 24
stmt (28)
    on left: 4 5 6 7 8, on right: 2 3
let (29)
    on left: 9, on right: 4
call (30)
    on left: 10 11 12, on right: 5
declare (31)
    on left: 13 14, on right: 6
ifstmt (32)
    on left: 15 16, on right: 8
elselist (33)
    on left: 17 18 19, on right: 16
elsiflist (34)
    on left: 20 21, on right: 17 19 21
elsif (35)
    on left: 22, on right: 20 21
else (36)
    on left: 23, on right: 18 19
if (37)
    on left: 24, on right: 15 16
symlist (38)
    on left: 25 26, on right: 13 26
explist (39)
    on left: 27 28, on right: 10 12 27
exp (40)
    on left: 29 30 31 32 33 34 35, on right: 7 9 22 24 27 28 36
factor (41)
    on left: 36 37 38 39, on right: 29 30 31 32 33 34 35


state 0

    0 $accept: . program $end

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    program  go to state 6
    stmts    go to state 7
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 1

    9 let: IDENT . '=' exp ';'
   10 call: IDENT . '(' explist ')' ';'
   11     | IDENT . '(' ')' ';'

    '='  shift, and go to state 14
    '('  shift, and go to state 15


state 2

   12 call: FUNC . '(' explist ')' ';'

    '('  shift, and go to state 16


state 3

    7 stmt: WHILE . '(' exp ')' '{' stmts '}'

    '('  shift, and go to state 17


state 4

   24 if: IF . '(' exp ')' '{' stmts '}'

    '('  shift, and go to state 18


state 5

   13 declare: DECLARE . IDENT '(' symlist ')' '{' stmts '}'
   14        | DECLARE . IDENT '(' ')' '{' stmts '}'

    IDENT  shift, and go to state 19


state 6

    0 $accept: program . $end

    $end  shift, and go to state 20


state 7

    1 program: stmts .

    $default  reduce using rule 1 (program)


state 8

    2 stmts: stmt .
    3      | stmt . stmts

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    $default  reduce using rule 2 (stmts)

    stmts    go to state 21
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 9

    4 stmt: let .

    $default  reduce using rule 4 (stmt)


state 10

    5 stmt: call .

    $default  reduce using rule 5 (stmt)


state 11

    6 stmt: declare .

    $default  reduce using rule 6 (stmt)


state 12

    8 stmt: ifstmt .

    $default  reduce using rule 8 (stmt)


state 13

   15 ifstmt: if .
   16       | if . elselist

    ELSE   shift, and go to state 22
    ELSIF  shift, and go to state 23

    $default  reduce using rule 15 (ifstmt)

    elselist   go to state 24
    elsiflist  go to state 25
    elsif      go to state 26
    else       go to state 27


state 14

    9 let: IDENT '=' . exp ';'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    exp     go to state 32
    factor  go to state 33


state 15

   10 call: IDENT '(' . explist ')' ';'
   11     | IDENT '(' . ')' ';'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31
    ')'     shift, and go to state 34

    explist  go to state 35
    exp      go to state 36
    factor   go to state 33


state 16

   12 call: FUNC '(' . explist ')' ';'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    explist  go to state 37
    exp      go to state 36
    factor   go to state 33


state 17

    7 stmt: WHILE '(' . exp ')' '{' stmts '}'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    exp     go to state 38
    factor  go to state 33


state 18

   24 if: IF '(' . exp ')' '{' stmts '}'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    exp     go to state 39
    factor  go to state 33


state 19

   13 declare: DECLARE IDENT . '(' symlist ')' '{' stmts '}'
   14        | DECLARE IDENT . '(' ')' '{' stmts '}'

    '('  shift, and go to state 40


state 20

    0 $accept: program $end .

    $default  accept


state 21

    3 stmts: stmt stmts .

    $default  reduce using rule 3 (stmts)


state 22

   23 else: ELSE . '{' stmts '}'

    '{'  shift, and go to state 41


state 23

   22 elsif: ELSIF . '(' exp ')' '{' stmts '}'

    '('  shift, and go to state 42


state 24

   16 ifstmt: if elselist .

    $default  reduce using rule 16 (ifstmt)


state 25

   17 elselist: elsiflist .
   19         | elsiflist . else

    ELSE  shift, and go to state 22

    $default  reduce using rule 17 (elselist)

    else  go to state 43


state 26

   20 elsiflist: elsif .
   21          | elsif . elsiflist

    ELSIF  shift, and go to state 23

    $default  reduce using rule 20 (elsiflist)

    elsiflist  go to state 44
    elsif      go to state 26


state 27

   18 elselist: else .

    $default  reduce using rule 18 (elselist)


state 28

   37 factor: NUMBER .

    $default  reduce using rule 37 (factor)


state 29

   38 factor: IDENT .

    $default  reduce using rule 38 (factor)


state 30

   39 factor: STRING .

    $default  reduce using rule 39 (factor)


state 31

   36 factor: '(' . exp ')'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    exp     go to state 45
    factor  go to state 33


state 32

    9 let: IDENT '=' exp . ';'

    ';'  shift, and go to state 46


state 33

   29 exp: factor . CMP factor
   30    | factor . '+' factor
   31    | factor . '-' factor
   32    | factor . '*' factor
   33    | factor . '/' factor
   34    | factor . '%' factor
   35    | factor .

    CMP  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 52

    $default  reduce using rule 35 (exp)


state 34

   11 call: IDENT '(' ')' . ';'

    ';'  shift, and go to state 53


state 35

   10 call: IDENT '(' explist . ')' ';'

    ')'  shift, and go to state 54


state 36

   27 explist: exp . ',' explist
   28        | exp .

    ','  shift, and go to state 55

    $default  reduce using rule 28 (explist)


state 37

   12 call: FUNC '(' explist . ')' ';'

    ')'  shift, and go to state 56


state 38

    7 stmt: WHILE '(' exp . ')' '{' stmts '}'

    ')'  shift, and go to state 57


state 39

   24 if: IF '(' exp . ')' '{' stmts '}'

    ')'  shift, and go to state 58


state 40

   13 declare: DECLARE IDENT '(' . symlist ')' '{' stmts '}'
   14        | DECLARE IDENT '(' . ')' '{' stmts '}'

    IDENT  shift, and go to state 59
    ')'    shift, and go to state 60

    symlist  go to state 61


state 41

   23 else: ELSE '{' . stmts '}'

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    stmts    go to state 62
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 42

   22 elsif: ELSIF '(' . exp ')' '{' stmts '}'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    exp     go to state 63
    factor  go to state 33


state 43

   19 elselist: elsiflist else .

    $default  reduce using rule 19 (elselist)


state 44

   21 elsiflist: elsif elsiflist .

    $default  reduce using rule 21 (elsiflist)


state 45

   36 factor: '(' exp . ')'

    ')'  shift, and go to state 64


state 46

    9 let: IDENT '=' exp ';' .

    $default  reduce using rule 9 (let)


state 47

   29 exp: factor CMP . factor

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    factor  go to state 65


state 48

   30 exp: factor '+' . factor

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    factor  go to state 66


state 49

   31 exp: factor '-' . factor

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    factor  go to state 67


state 50

   32 exp: factor '*' . factor

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    factor  go to state 68


state 51

   33 exp: factor '/' . factor

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    factor  go to state 69


state 52

   34 exp: factor '%' . factor

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    factor  go to state 70


state 53

   11 call: IDENT '(' ')' ';' .

    $default  reduce using rule 11 (call)


state 54

   10 call: IDENT '(' explist ')' . ';'

    ';'  shift, and go to state 71


state 55

   27 explist: exp ',' . explist

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    explist  go to state 72
    exp      go to state 36
    factor   go to state 33


state 56

   12 call: FUNC '(' explist ')' . ';'

    ';'  shift, and go to state 73


state 57

    7 stmt: WHILE '(' exp ')' . '{' stmts '}'

    '{'  shift, and go to state 74


state 58

   24 if: IF '(' exp ')' . '{' stmts '}'

    '{'  shift, and go to state 75


state 59

   25 symlist: IDENT .
   26        | IDENT . ',' symlist

    ','  shift, and go to state 76

    $default  reduce using rule 25 (symlist)


state 60

   14 declare: DECLARE IDENT '(' ')' . '{' stmts '}'

    '{'  shift, and go to state 77


state 61

   13 declare: DECLARE IDENT '(' symlist . ')' '{' stmts '}'

    ')'  shift, and go to state 78


state 62

   23 else: ELSE '{' stmts . '}'

    '}'  shift, and go to state 79


state 63

   22 elsif: ELSIF '(' exp . ')' '{' stmts '}'

    ')'  shift, and go to state 80


state 64

   36 factor: '(' exp ')' .

    $default  reduce using rule 36 (factor)


state 65

   29 exp: factor CMP factor .

    $default  reduce using rule 29 (exp)


state 66

   30 exp: factor '+' factor .

    $default  reduce using rule 30 (exp)


state 67

   31 exp: factor '-' factor .

    $default  reduce using rule 31 (exp)


state 68

   32 exp: factor '*' factor .

    $default  reduce using rule 32 (exp)


state 69

   33 exp: factor '/' factor .

    $default  reduce using rule 33 (exp)


state 70

   34 exp: factor '%' factor .

    $default  reduce using rule 34 (exp)


state 71

   10 call: IDENT '(' explist ')' ';' .

    $default  reduce using rule 10 (call)


state 72

   27 explist: exp ',' explist .

    $default  reduce using rule 27 (explist)


state 73

   12 call: FUNC '(' explist ')' ';' .

    $default  reduce using rule 12 (call)


state 74

    7 stmt: WHILE '(' exp ')' '{' . stmts '}'

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    stmts    go to state 81
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 75

   24 if: IF '(' exp ')' '{' . stmts '}'

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    stmts    go to state 82
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 76

   26 symlist: IDENT ',' . symlist

    IDENT  shift, and go to state 59

    symlist  go to state 83


state 77

   14 declare: DECLARE IDENT '(' ')' '{' . stmts '}'

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    stmts    go to state 84
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 78

   13 declare: DECLARE IDENT '(' symlist ')' . '{' stmts '}'

    '{'  shift, and go to state 85


state 79

   23 else: ELSE '{' stmts '}' .

    $default  reduce using rule 23 (else)


state 80

   22 elsif: ELSIF '(' exp ')' . '{' stmts '}'

    '{'  shift, and go to state 86


state 81

    7 stmt: WHILE '(' exp ')' '{' stmts . '}'

    '}'  shift, and go to state 87


state 82

   24 if: IF '(' exp ')' '{' stmts . '}'

    '}'  shift, and go to state 88


state 83

   26 symlist: IDENT ',' symlist .

    $default  reduce using rule 26 (symlist)


state 84

   14 declare: DECLARE IDENT '(' ')' '{' stmts . '}'

    '}'  shift, and go to state 89


state 85

   13 declare: DECLARE IDENT '(' symlist ')' '{' . stmts '}'

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    stmts    go to state 90
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 86

   22 elsif: ELSIF '(' exp ')' '{' . stmts '}'

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    stmts    go to state 91
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 87

    7 stmt: WHILE '(' exp ')' '{' stmts '}' .

    $default  reduce using rule 7 (stmt)


state 88

   24 if: IF '(' exp ')' '{' stmts '}' .

    $default  reduce using rule 24 (if)


state 89

   14 declare: DECLARE IDENT '(' ')' '{' stmts '}' .

    $default  reduce using rule 14 (declare)


state 90

   13 declare: DECLARE IDENT '(' symlist ')' '{' stmts . '}'

    '}'  shift, and go to state 92


state 91

   22 elsif: ELSIF '(' exp ')' '{' stmts . '}'

    '}'  shift, and go to state 93


state 92

   13 declare: DECLARE IDENT '(' symlist ')' '{' stmts '}' .

    $default  reduce using rule 13 (declare)


state 93

   22 elsif: ELSIF '(' exp ')' '{' stmts '}' .

    $default  reduce using rule 22 (elsif)
