Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmt
    3      | stmt stmts

    4 stmt: let
    5     | call
    6     | declare
    7     | WHILE '(' exp ')' '{' stmts '}'
    8     | ifstmt

    9 let: IDENT '=' exp ';'

   10 call: IDENT '(' explist ')' ';'
   11     | IDENT '(' ')' ';'
   12     | FUNC '(' explist ')' ';'

   13 declare: DECLARE IDENT '(' symlist ')' '{' stmts '}'

   14 ifstmt: if
   15       | if elselist

   16 elselist: elsiflist
   17         | else
   18         | elsiflist else

   19 elsiflist: elsif
   20          | elsif elsiflist

   21 elsif: ELSIF '(' exp ')' '{' stmts '}'

   22 else: ELSE '{' stmts '}'

   23 if: IF '(' exp ')' '{' stmts '}'

   24 symlist: /* empty */
   25        | IDENT
   26        | IDENT ',' symlist

   27 explist: exp ',' explist
   28        | exp

   29 exp: factor
   30    | factor '+' factor
   31    | factor '-' factor
   32    | factor '*' factor
   33    | factor '/' factor

   34 factor: '(' exp ')'
   35       | NUMBER
   36       | IDENT
   37       | STRING


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 10 11 12 13 21 23 34
')' (41) 7 10 11 12 13 21 23 34
'*' (42) 32
'+' (43) 30
',' (44) 26 27
'-' (45) 31
'/' (47) 33
';' (59) 9 10 11 12
'=' (61) 9
'{' (123) 7 13 21 22 23
'}' (125) 7 13 21 22 23
error (256)
NUMBER (258) 35
IDENT (259) 9 10 11 13 25 26 36
STRING (260) 37
FUNC (261) 12
WHILE (262) 7
IF (263) 23
ELSE (264) 22
ELSIF (265) 21
DECLARE (266) 13


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
program (24)
    on left: 1, on right: 0
stmts (25)
    on left: 2 3, on right: 1 3 7 13 21 22 23
stmt (26)
    on left: 4 5 6 7 8, on right: 2 3
let (27)
    on left: 9, on right: 4
call (28)
    on left: 10 11 12, on right: 5
declare (29)
    on left: 13, on right: 6
ifstmt (30)
    on left: 14 15, on right: 8
elselist (31)
    on left: 16 17 18, on right: 15
elsiflist (32)
    on left: 19 20, on right: 16 18 20
elsif (33)
    on left: 21, on right: 19 20
else (34)
    on left: 22, on right: 17 18
if (35)
    on left: 23, on right: 14 15
symlist (36)
    on left: 24 25 26, on right: 13 26
explist (37)
    on left: 27 28, on right: 10 12 27
exp (38)
    on left: 29 30 31 32 33, on right: 7 9 21 23 27 28 34
factor (39)
    on left: 34 35 36 37, on right: 29 30 31 32 33


state 0

    0 $accept: . program $end

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    program  go to state 6
    stmts    go to state 7
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 1

    9 let: IDENT . '=' exp ';'
   10 call: IDENT . '(' explist ')' ';'
   11     | IDENT . '(' ')' ';'

    '='  shift, and go to state 14
    '('  shift, and go to state 15


state 2

   12 call: FUNC . '(' explist ')' ';'

    '('  shift, and go to state 16


state 3

    7 stmt: WHILE . '(' exp ')' '{' stmts '}'

    '('  shift, and go to state 17


state 4

   23 if: IF . '(' exp ')' '{' stmts '}'

    '('  shift, and go to state 18


state 5

   13 declare: DECLARE . IDENT '(' symlist ')' '{' stmts '}'

    IDENT  shift, and go to state 19


state 6

    0 $accept: program . $end

    $end  shift, and go to state 20


state 7

    1 program: stmts .

    $default  reduce using rule 1 (program)


state 8

    2 stmts: stmt .
    3      | stmt . stmts

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    $default  reduce using rule 2 (stmts)

    stmts    go to state 21
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 9

    4 stmt: let .

    $default  reduce using rule 4 (stmt)


state 10

    5 stmt: call .

    $default  reduce using rule 5 (stmt)


state 11

    6 stmt: declare .

    $default  reduce using rule 6 (stmt)


state 12

    8 stmt: ifstmt .

    $default  reduce using rule 8 (stmt)


state 13

   14 ifstmt: if .
   15       | if . elselist

    ELSE   shift, and go to state 22
    ELSIF  shift, and go to state 23

    $default  reduce using rule 14 (ifstmt)

    elselist   go to state 24
    elsiflist  go to state 25
    elsif      go to state 26
    else       go to state 27


state 14

    9 let: IDENT '=' . exp ';'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    exp     go to state 32
    factor  go to state 33


state 15

   10 call: IDENT '(' . explist ')' ';'
   11     | IDENT '(' . ')' ';'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31
    ')'     shift, and go to state 34

    explist  go to state 35
    exp      go to state 36
    factor   go to state 33


state 16

   12 call: FUNC '(' . explist ')' ';'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    explist  go to state 37
    exp      go to state 36
    factor   go to state 33


state 17

    7 stmt: WHILE '(' . exp ')' '{' stmts '}'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    exp     go to state 38
    factor  go to state 33


state 18

   23 if: IF '(' . exp ')' '{' stmts '}'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    exp     go to state 39
    factor  go to state 33


state 19

   13 declare: DECLARE IDENT . '(' symlist ')' '{' stmts '}'

    '('  shift, and go to state 40


state 20

    0 $accept: program $end .

    $default  accept


state 21

    3 stmts: stmt stmts .

    $default  reduce using rule 3 (stmts)


state 22

   22 else: ELSE . '{' stmts '}'

    '{'  shift, and go to state 41


state 23

   21 elsif: ELSIF . '(' exp ')' '{' stmts '}'

    '('  shift, and go to state 42


state 24

   15 ifstmt: if elselist .

    $default  reduce using rule 15 (ifstmt)


state 25

   16 elselist: elsiflist .
   18         | elsiflist . else

    ELSE  shift, and go to state 22

    $default  reduce using rule 16 (elselist)

    else  go to state 43


state 26

   19 elsiflist: elsif .
   20          | elsif . elsiflist

    ELSIF  shift, and go to state 23

    $default  reduce using rule 19 (elsiflist)

    elsiflist  go to state 44
    elsif      go to state 26


state 27

   17 elselist: else .

    $default  reduce using rule 17 (elselist)


state 28

   35 factor: NUMBER .

    $default  reduce using rule 35 (factor)


state 29

   36 factor: IDENT .

    $default  reduce using rule 36 (factor)


state 30

   37 factor: STRING .

    $default  reduce using rule 37 (factor)


state 31

   34 factor: '(' . exp ')'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    exp     go to state 45
    factor  go to state 33


state 32

    9 let: IDENT '=' exp . ';'

    ';'  shift, and go to state 46


state 33

   29 exp: factor .
   30    | factor . '+' factor
   31    | factor . '-' factor
   32    | factor . '*' factor
   33    | factor . '/' factor

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 29 (exp)


state 34

   11 call: IDENT '(' ')' . ';'

    ';'  shift, and go to state 51


state 35

   10 call: IDENT '(' explist . ')' ';'

    ')'  shift, and go to state 52


state 36

   27 explist: exp . ',' explist
   28        | exp .

    ','  shift, and go to state 53

    $default  reduce using rule 28 (explist)


state 37

   12 call: FUNC '(' explist . ')' ';'

    ')'  shift, and go to state 54


state 38

    7 stmt: WHILE '(' exp . ')' '{' stmts '}'

    ')'  shift, and go to state 55


state 39

   23 if: IF '(' exp . ')' '{' stmts '}'

    ')'  shift, and go to state 56


state 40

   13 declare: DECLARE IDENT '(' . symlist ')' '{' stmts '}'

    IDENT  shift, and go to state 57

    $default  reduce using rule 24 (symlist)

    symlist  go to state 58


state 41

   22 else: ELSE '{' . stmts '}'

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    stmts    go to state 59
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 42

   21 elsif: ELSIF '(' . exp ')' '{' stmts '}'

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    exp     go to state 60
    factor  go to state 33


state 43

   18 elselist: elsiflist else .

    $default  reduce using rule 18 (elselist)


state 44

   20 elsiflist: elsif elsiflist .

    $default  reduce using rule 20 (elsiflist)


state 45

   34 factor: '(' exp . ')'

    ')'  shift, and go to state 61


state 46

    9 let: IDENT '=' exp ';' .

    $default  reduce using rule 9 (let)


state 47

   30 exp: factor '+' . factor

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    factor  go to state 62


state 48

   31 exp: factor '-' . factor

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    factor  go to state 63


state 49

   32 exp: factor '*' . factor

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    factor  go to state 64


state 50

   33 exp: factor '/' . factor

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    factor  go to state 65


state 51

   11 call: IDENT '(' ')' ';' .

    $default  reduce using rule 11 (call)


state 52

   10 call: IDENT '(' explist ')' . ';'

    ';'  shift, and go to state 66


state 53

   27 explist: exp ',' . explist

    NUMBER  shift, and go to state 28
    IDENT   shift, and go to state 29
    STRING  shift, and go to state 30
    '('     shift, and go to state 31

    explist  go to state 67
    exp      go to state 36
    factor   go to state 33


state 54

   12 call: FUNC '(' explist ')' . ';'

    ';'  shift, and go to state 68


state 55

    7 stmt: WHILE '(' exp ')' . '{' stmts '}'

    '{'  shift, and go to state 69


state 56

   23 if: IF '(' exp ')' . '{' stmts '}'

    '{'  shift, and go to state 70


state 57

   25 symlist: IDENT .
   26        | IDENT . ',' symlist

    ','  shift, and go to state 71

    $default  reduce using rule 25 (symlist)


state 58

   13 declare: DECLARE IDENT '(' symlist . ')' '{' stmts '}'

    ')'  shift, and go to state 72


state 59

   22 else: ELSE '{' stmts . '}'

    '}'  shift, and go to state 73


state 60

   21 elsif: ELSIF '(' exp . ')' '{' stmts '}'

    ')'  shift, and go to state 74


state 61

   34 factor: '(' exp ')' .

    $default  reduce using rule 34 (factor)


state 62

   30 exp: factor '+' factor .

    $default  reduce using rule 30 (exp)


state 63

   31 exp: factor '-' factor .

    $default  reduce using rule 31 (exp)


state 64

   32 exp: factor '*' factor .

    $default  reduce using rule 32 (exp)


state 65

   33 exp: factor '/' factor .

    $default  reduce using rule 33 (exp)


state 66

   10 call: IDENT '(' explist ')' ';' .

    $default  reduce using rule 10 (call)


state 67

   27 explist: exp ',' explist .

    $default  reduce using rule 27 (explist)


state 68

   12 call: FUNC '(' explist ')' ';' .

    $default  reduce using rule 12 (call)


state 69

    7 stmt: WHILE '(' exp ')' '{' . stmts '}'

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    stmts    go to state 75
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 70

   23 if: IF '(' exp ')' '{' . stmts '}'

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    stmts    go to state 76
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 71

   26 symlist: IDENT ',' . symlist

    IDENT  shift, and go to state 57

    $default  reduce using rule 24 (symlist)

    symlist  go to state 77


state 72

   13 declare: DECLARE IDENT '(' symlist ')' . '{' stmts '}'

    '{'  shift, and go to state 78


state 73

   22 else: ELSE '{' stmts '}' .

    $default  reduce using rule 22 (else)


state 74

   21 elsif: ELSIF '(' exp ')' . '{' stmts '}'

    '{'  shift, and go to state 79


state 75

    7 stmt: WHILE '(' exp ')' '{' stmts . '}'

    '}'  shift, and go to state 80


state 76

   23 if: IF '(' exp ')' '{' stmts . '}'

    '}'  shift, and go to state 81


state 77

   26 symlist: IDENT ',' symlist .

    $default  reduce using rule 26 (symlist)


state 78

   13 declare: DECLARE IDENT '(' symlist ')' '{' . stmts '}'

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    stmts    go to state 82
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 79

   21 elsif: ELSIF '(' exp ')' '{' . stmts '}'

    IDENT    shift, and go to state 1
    FUNC     shift, and go to state 2
    WHILE    shift, and go to state 3
    IF       shift, and go to state 4
    DECLARE  shift, and go to state 5

    stmts    go to state 83
    stmt     go to state 8
    let      go to state 9
    call     go to state 10
    declare  go to state 11
    ifstmt   go to state 12
    if       go to state 13


state 80

    7 stmt: WHILE '(' exp ')' '{' stmts '}' .

    $default  reduce using rule 7 (stmt)


state 81

   23 if: IF '(' exp ')' '{' stmts '}' .

    $default  reduce using rule 23 (if)


state 82

   13 declare: DECLARE IDENT '(' symlist ')' '{' stmts . '}'

    '}'  shift, and go to state 84


state 83

   21 elsif: ELSIF '(' exp ')' '{' stmts . '}'

    '}'  shift, and go to state 85


state 84

   13 declare: DECLARE IDENT '(' symlist ')' '{' stmts '}' .

    $default  reduce using rule 13 (declare)


state 85

   21 elsif: ELSIF '(' exp ')' '{' stmts '}' .

    $default  reduce using rule 21 (elsif)
